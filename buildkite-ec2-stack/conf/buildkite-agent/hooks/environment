#!/bin/bash

set -eu -o pipefail

# shellcheck source=/dev/null
source ~/cfn-env

echo "~~~ :llama: Setting up elastic stack environment ($BUILDKITE_STACK_VERSION)"
cat ~/cfn-env

echo "Configuring built-in plugins"

[[ ! ${SECRETS_PLUGIN_ENABLED:-true} =~ (on|1|true) ]] && PLUGINS_ENABLED=${PLUGINS_ENABLED/secrets/}
[[ ! ${DOCKER_LOGIN_PLUGIN_ENABLED:-true} =~ (on|1|true) ]] && PLUGINS_ENABLED=${PLUGINS_ENABLED/docker-login/}
[[ ! ${ECR_PLUGIN_ENABLED:-true} =~ (on|1|true) ]] && PLUGINS_ENABLED=${PLUGINS_ENABLED/ecr/}

SECRETS_PLUGIN_ENABLED=0
DOCKER_LOGIN_PLUGIN_ENABLED=0
ECR_PLUGIN_ENABLED=0

for plugin in $PLUGINS_ENABLED ; do
  case "$plugin" in
    secrets)
      export SECRETS_PLUGIN_ENABLED=1
      echo "Secrets plugin enabled"
      ;;
    docker-login)
      export DOCKER_LOGIN_PLUGIN_ENABLED=1
      echo "Docker-login plugin enabled"
      ;;
    ecr)
      export ECR_PLUGIN_ENABLED=1
      echo "ECR plugin enabled"
      ;;
  esac
done

if [[ -n "${BUILDKITE_SECRETS_BUCKET:-}" &&  "${SECRETS_PLUGIN_ENABLED:-}" == "1" ]] ; then
  export BUILDKITE_PLUGIN_S3_SECRETS_BUCKET="$BUILDKITE_SECRETS_BUCKET"

  # shellcheck source=/dev/null
  source /usr/local/buildkite-aws-stack/plugins/secrets/hooks/environment
fi

# We need to scope the next bit to only the currently running agent's builds,
# but we also need to control security and make sure arbitrary folders can't be
# chmoded.
#
# The agent builds path isn't exposed nicely by itself. The agent name also
# doesn't quite map to its builds path. We do have a complete checkout path,
# but we need to chop it up, safely. The path looks like:
#
#   BUILDKITE_BUILD_CHECKOUT_PATH="/var/lib/buildkite-agent/builds/my-agent-1/my-pipeline-blah"
#
# We know the beginning of this path, it's in BUILDKITE_BUILD_PATH:
#
#   BUILDKITE_BUILD_PATH="/var/lib/buildkite-agent/builds"

# So we can calculate the suffix as a substring:
BUILD_PATH_SUFFIX="${BUILDKITE_BUILD_CHECKOUT_PATH#${BUILDKITE_BUILD_PATH}/}"
# => "my-agent-1/my-pipeline-blah"

# Then we can grab just the first path component by removing the longest suffix starting with a slash:
AGENT_BUILD_NAME="${BUILD_PATH_SUFFIX%%/*}"
# => "my-agent-1"

# Now we can pass this to the sudo script which will validate it before safely chmodding:
echo "Fixing permissions for '${AGENT_BUILD_NAME}'..."
sudo /usr/bin/fix-buildkite-agent-builds-permissions "${AGENT_BUILD_NAME}"
echo
